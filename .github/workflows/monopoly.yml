name: Monopoly WebGL Build

on:
  push:
    branches: [ "main" ]       # change to "master" if your default branch is master
  workflow_dispatch:            # lets you run it manually from the Actions tab

# Needed for official GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Avoid racing deployments if multiple commits come quickly
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Build WebGL
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Speeds up subsequent builds by caching the Unity Library/ directory
      - name: Cache Library
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ runner.os }}-${{ hashFiles('**/Packages/manifest.json') }}
          restore-keys: |
            Library-${{ runner.os }}-

      # Build with GameCI (Unity in Docker)
      - name: Build with Unity (WebGL)
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}

        with:
          projectPath: .
          targetPlatform: WebGL
          unityVersion: 6000.0.23f1   # set this to match ProjectSettings/ProjectVersion.txt
          buildName: Monopoly
          
      - name: List build output
        run: ls -R build

      # Hand off the built site to the Pages deployment job
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/WebGL

  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
